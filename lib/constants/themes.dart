import 'package:flutter/material.dart';

final ThemeData lightAppTheme = _buildLightTheme();
final ThemeData darkAppTheme = _buildDarkTheme();


// <!-- Palette generated by Material Palette - materialpalette.com/brown/teal -->
// <?xml version="1.0" encoding="utf-8"?>
// <resources>
//   <color name="primary">#795548</color>
//   <color name="primary_dark">#5D4037</color>
//   <color name="primary_light">#D7CCC8</color>
//   <color name="accent">#009688</color>
//   <color name="primary_text">#212121</color>
//   <color name="secondary_text">#757575</color>
//   <color name="icons">#FFFFFF</color>
//   <color name="divider">#BDBDBD</color>
// </resources>

TextTheme _buildTextTheme(TextTheme base) {
  return base.apply(
    // bodyColor:  Color(0xFF212121),
    // displayColor:  Color(0xFF212121),
    
    fontFamily:  'Montserrat',
    
  );
}

IconThemeData _buildIconTheme(IconThemeData base) {
  return base.copyWith(
    color:  Colors.teal,
  );
}

ThemeData _buildLightTheme() {
  const Color primaryColor = Colors.white;
  const Color secondaryColor = Colors.teal;
  final ColorScheme colorScheme = const ColorScheme.light().copyWith(
    primary: primaryColor,
    secondary: secondaryColor,
  );
  final ThemeData base = ThemeData(
    fontFamily: 'Montserrat',
    brightness: Brightness.light,
    accentColorBrightness: Brightness.dark,
    colorScheme: colorScheme,
    primaryColor: primaryColor,
    buttonColor: primaryColor,
    indicatorColor: Colors.white,
    toggleableActiveColor: const Color(0xFF1E88E5),
    splashColor: Colors.white24,
    splashFactory: InkRipple.splashFactory,
    accentColor: Colors.teal,
    canvasColor: Colors.white,
    scaffoldBackgroundColor: Colors.white,
    backgroundColor: Colors.white,
    errorColor: const Color(0xFFB00020),
    buttonTheme: ButtonThemeData(
      colorScheme: colorScheme,
      textTheme: ButtonTextTheme.primary,
    ),
  );
  return base.copyWith(
      textTheme: _buildTextTheme(base.textTheme),
      primaryTextTheme: _buildTextTheme(base.primaryTextTheme),
      // accentTextTheme: _buildTextTheme(base.accentTextTheme),
      iconTheme: _buildIconTheme(base.iconTheme));
}

ThemeData _buildDarkTheme() {
  const Color primaryColor = Color(0xFF0175c2);
  const Color secondaryColor = Color(0xFF13B9FD);
  final ColorScheme colorScheme = const ColorScheme.dark().copyWith(
    primary: primaryColor,
    secondary: secondaryColor,
  );
  final ThemeData base = ThemeData(
    brightness: Brightness.dark,
    accentColorBrightness: Brightness.dark,
    primaryColor: primaryColor,
    primaryColorDark: const Color(0xFF0050a0),
    primaryColorLight: secondaryColor,
    buttonColor: primaryColor,
    indicatorColor: Colors.white,
    toggleableActiveColor: const Color(0xFF6997DF),
    accentColor: secondaryColor,
    canvasColor: const Color(0xFF202124),
    scaffoldBackgroundColor: const Color(0xFF202124),
    backgroundColor: const Color(0xFF202124),
    errorColor: const Color(0xFFB00020),
    buttonTheme: ButtonThemeData(
      colorScheme: colorScheme,
      textTheme: ButtonTextTheme.primary,
    ),
  );
  return base.copyWith(
    textTheme: _buildTextTheme(base.textTheme),
    primaryTextTheme: _buildTextTheme(base.primaryTextTheme),
    // accentTextTheme: _buildTextTheme(base.accentTextTheme),
  );
}
